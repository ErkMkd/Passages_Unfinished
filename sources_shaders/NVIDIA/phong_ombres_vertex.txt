
/************************************************************************************************************

		Affichage des ombres portées, avec les sources lumineuses d'openGl, sans texture
		Calcul les coordonnées UV de la texture de profondeur sur les sommets vus de la source génératrice des ombres
		
						!!! La source des ombres est obligatoirement la source 0 !!!

**************************************************************************************************************/


//------- Données de gestion des ombres:
uniform mat4 matrice_projection_vision_source;
uniform mat4 matrice_vision_source;
uniform mat4 matrice_source_uv;	//transformation_uv*projection*vision*matrice_volume

varying vec4 coordonnees_texture_ombres;
varying float distance_source_des_ombres;

//------ Données de gestion de la lumière:

uniform int drapeaux_sources;	//Les bits d'activation des sources lumineuses

varying vec3 direction_oeil;
varying vec3 directions_sources[8];
varying float distances_sources[8];
varying vec3 normale_face;

varying vec3 couleur_ambiante_globale;

//====================================
//			Main
//====================================

void main( void )
{	
	//-------------- Calculs ombre:
		coordonnees_texture_ombres=(matrice_source_uv*gl_Vertex);
	
	//--------------- Position du sommet:
		gl_Position 	=  gl_ModelViewProjectionMatrix * gl_Vertex;
		normale_face	= gl_NormalMatrix * gl_Normal;
		vec3 position_sommet 	= (gl_ModelViewMatrix * gl_Vertex).xyz;
		direction_oeil 	= -position_sommet;
   
   // ----------------- Calcul des sources:	
	distance_source_des_ombres=-(matrice_vision_source * gl_Vertex).z;
			
	for(int n=0;n<gl_MaxLights;n++)
	{
		if ( !(drapeaux_sources & (1<<n)) ) continue;
		vec3 position_source 		= (gl_LightSource[n].position).xyz;
		directions_sources[n] 		= position_source-position_sommet;
		distances_sources[n] 		= length(directions_sources[n]);
	}
		
	couleur_ambiante_globale = gl_FrontMaterial.ambient.rgb*gl_LightModel.ambient.rgb;	
}